// Ferz_task.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <conio.h>
#include <vector>

using namespace std;

class FerZ {
private:
	int x = 0;
	int y = 0;
	int number = 1;
public:

	FerZ(int x_val, int y_val, int number_val) {
		x = x_val;
		y = y_val;
		number = number_val;
	}

	int is_safe(vector<vector<int>>& array, int x, int y) {
		if (array[x][y] == 0) {
			return 1;
		}
		return 0;
	}

	int place(vector<vector<int>>& array) {
		if (array[x][y] == 0) {
			array[x][y] = 2;
		}
		else return 0;
		for (int i = 0; i < array.size(); i++) {
			for (int j = 0; j < array.size(); j++) {
				if (((i == x) || (j == y) || (x-i == y-j) || (x+y == j + i))&& (array[i][j]!=2)) {
					array[i][j] = 1;
				}
			}
		}
	}
	
											
};

vector<vector<int>> createArray(int n) {
	vector<vector<int>> array(n, vector<int>(n, 0));
	return array;
}

void printArray(vector<vector<int>>& array) {
	for (const auto& row : array) {
		for (int element : row) {
			cout << element << " ";
		}
		cout << endl;
	}
}

void fill_with_zeros(vector<vector<int>>& matrix) {
	for (auto& row : matrix) {
		for (int element : row) {
			element = 0;
		}
	}
}

int main()
{
	int n;
	cin >> n;

	vector<vector<int>> board = createArray(n);
	int x = 0, y = 0;
	int schet = 0;
	while (schet != 10) {
		schet = 0;
		cout <<endl<< x << " " << y<<endl;
		FerZ f(x, y, schet);
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < n; j++) {
				FerZ ferz(i, j, schet);
				if (ferz.place(board) != 0) {
					schet++;
				}
			}
		}
		x++;
		if (x == 10) { x = 0; y++; }
		printArray(board);
		fill_with_zeros(board);
		cout << endl << schet << endl;
		_getch();
	}



	printArray(board);
	cout << endl <<schet;
	_getch();
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
